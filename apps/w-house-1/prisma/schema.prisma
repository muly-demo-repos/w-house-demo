datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Batch {
  asset             Asset           @relation(fields: [assetId], references: [id])
  assetId           String          @db.ObjectId
  batchActualQty    Float
  batchClass        String
  batchClassId      String
  batchClassName    String
  batchId           String
  batchPlannedQty   Float
  batchUnits        String
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  item              Item            @relation(fields: [itemId], references: [id])
  itemId            String          @db.ObjectId
  productionOrder   ProductionOrder @relation(fields: [productionOrderId], references: [id])
  productionOrderId String          @db.ObjectId
  route             Route           @relation(fields: [routeId], references: [id])
  routeId           String          @db.ObjectId
  status            EnumBatchStatus
}

model Route {
  batches            Batch[]
  id                 String            @id @default(auto()) @map("_id") @db.ObjectId
  productionOrder    ProductionOrder[]
  routeName          String
  routeOperation     String
  routeOperationStep String
  routeRevision      String
}

model Asset {
  assetDescription String
  assetName        String
  batches          Batch[]
  children         Asset[]       @relation(name: "children")
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  parent           Asset?        @relation(name: "children", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId         String?       @db.ObjectId
  type             EnumAssetType
}

model ProductionOrder {
  batches       Batch[]
  className     String
  createdAt     DateTime
  createdBy     String
  editedAt      DateTime
  editedBy      String
  endDate       DateTime      @map("endDate")
  firmed        Boolean
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  released      Boolean
  route         Route         @relation(fields: [routeRouteId], references: [id])
  routeRouteId  String        @db.ObjectId
  routeRecipes  RouteRecipe[]
  schemaVersion String
  startDate     DateTime      @map("startDate")
  state         String
  wipItem       Item          @relation(fields: [itemId], references: [id])
  itemId        String        @db.ObjectId
}

model Item {
  batchClassActive      Boolean
  batchClassDescription String
  batchClassId          String
  batchClassName        String
  batchClassRevision    String
  batches               Batch[]
  className             String
  createdAt             DateTime
  createdBy             String
  editedAt              DateTime
  editedBy              String
  id                    String            @id @default(auto()) @map("_id") @db.ObjectId
  productionOrderId     String?           @db.ObjectId
  productionOrders      ProductionOrder[]
  schemaVersion         String
}

model Operation {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  operationName String
}

model RouteRecipe {
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  operationStepId   String           @db.ObjectId
  operationStepName String
  productionOrder   ProductionOrder? @relation(fields: [productionOrderId], references: [id])
  productionOrderId String?          @db.ObjectId
}

enum EnumBatchStatus {
  ACTIVE
  INACTIVE
  PENDING
}

enum EnumAssetType {
  ENT
  SITE
  AREA
  LINE
  CELL
  EQUIPMOD
  EQUIPPHASE
  CONTROLMOD
}
