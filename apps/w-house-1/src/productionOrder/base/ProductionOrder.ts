/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Batch } from "../../batch/base/Batch";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { Route } from "../../route/base/Route";
import { RouteRecipe } from "../../routeRecipe/base/RouteRecipe";
import { Item } from "../../item/base/Item";

@ObjectType()
class ProductionOrder {
  @ApiProperty({
    required: false,
    type: () => [Batch],
  })
  @ValidateNested()
  @Type(() => Batch)
  @IsOptional()
  batches?: Array<Batch>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  className!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  createdBy!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  editedAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  editedBy!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  endDate!: Date;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  firmed!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  released!: boolean;

  @ApiProperty({
    required: true,
    type: () => Route,
  })
  @ValidateNested()
  @Type(() => Route)
  route?: Route;

  @ApiProperty({
    required: false,
    type: () => [RouteRecipe],
  })
  @ValidateNested()
  @Type(() => RouteRecipe)
  @IsOptional()
  routeRecipes?: Array<RouteRecipe>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  schemaVersion!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  startDate!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  state!: string;

  @ApiProperty({
    required: true,
    type: () => Item,
  })
  @ValidateNested()
  @Type(() => Item)
  wipItem?: Item;
}

export { ProductionOrder as ProductionOrder };
