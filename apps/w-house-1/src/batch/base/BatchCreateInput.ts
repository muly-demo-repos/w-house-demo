/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssetWhereUniqueInput } from "../../asset/base/AssetWhereUniqueInput";
import { ValidateNested, IsNumber, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { ItemWhereUniqueInput } from "../../item/base/ItemWhereUniqueInput";
import { ProductionOrderWhereUniqueInput } from "../../productionOrder/base/ProductionOrderWhereUniqueInput";
import { RouteWhereUniqueInput } from "../../route/base/RouteWhereUniqueInput";
import { EnumBatchStatus } from "./EnumBatchStatus";

@InputType()
class BatchCreateInput {
  @ApiProperty({
    required: true,
    type: () => AssetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AssetWhereUniqueInput)
  @Field(() => AssetWhereUniqueInput)
  asset!: AssetWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  batchActualQty!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchClass!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchClassId!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchClassName!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchId!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  batchPlannedQty!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchUnits!: string;

  @ApiProperty({
    required: true,
    type: () => ItemWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ItemWhereUniqueInput)
  @Field(() => ItemWhereUniqueInput)
  item!: ItemWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: () => ProductionOrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductionOrderWhereUniqueInput)
  @Field(() => ProductionOrderWhereUniqueInput)
  productionOrder!: ProductionOrderWhereUniqueInput;

  @ApiProperty({
    required: true,
    type: () => RouteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RouteWhereUniqueInput)
  @Field(() => RouteWhereUniqueInput)
  route!: RouteWhereUniqueInput;

  @ApiProperty({
    required: true,
    enum: EnumBatchStatus,
  })
  @IsEnum(EnumBatchStatus)
  @Field(() => EnumBatchStatus)
  status!: "ACTIVE" | "INACTIVE" | "PENDING";
}

export { BatchCreateInput as BatchCreateInput };
