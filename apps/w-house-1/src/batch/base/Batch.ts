/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Asset } from "../../asset/base/Asset";
import { ValidateNested, IsNumber, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { Item } from "../../item/base/Item";
import { ProductionOrder } from "../../productionOrder/base/ProductionOrder";
import { Route } from "../../route/base/Route";
import { EnumBatchStatus } from "./EnumBatchStatus";

@ObjectType()
class Batch {
  @ApiProperty({
    required: true,
    type: () => Asset,
  })
  @ValidateNested()
  @Type(() => Asset)
  asset?: Asset;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  batchActualQty!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchClass!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchClassId!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchClassName!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchId!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  batchPlannedQty!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  batchUnits!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: () => Item,
  })
  @ValidateNested()
  @Type(() => Item)
  item?: Item;

  @ApiProperty({
    required: true,
    type: () => ProductionOrder,
  })
  @ValidateNested()
  @Type(() => ProductionOrder)
  productionOrder?: ProductionOrder;

  @ApiProperty({
    required: true,
    type: () => Route,
  })
  @ValidateNested()
  @Type(() => Route)
  route?: Route;

  @ApiProperty({
    required: true,
    enum: EnumBatchStatus,
  })
  @IsEnum(EnumBatchStatus)
  @Field(() => EnumBatchStatus, {
    nullable: true,
  })
  status?: "ACTIVE" | "INACTIVE" | "PENDING";
}

export { Batch as Batch };
